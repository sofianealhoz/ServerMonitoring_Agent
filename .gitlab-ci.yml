image: devops.telecomste.fr:5050/printerfaceadmin/2023-24/group1/agent/image_ci

before_script:
  - python --version ; pip --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate 
  - python3 -m venv .venv
  - source .venv/bin/activate
  - echo "> Installing requirements"
  - pip install -r requirements.dev.txt
  - pip install pytest flake8 psutil coverage apache-log-parser
  - echo "Installing Docker..."
  - apt-get update -qy
  - apt-get install -y docker.io
  - docker --version


stages: # List of stages for jobs, and their order of execution
  #- build
  - test
  - deploy

#build-job:
#  stage: build
#  script:
unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests...."
    - pytest
    - echo "Tests done."

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code..."
    - flake8 ./src
    - echo "No lint issues found."

code-coverage-job:
  stage: test
  script:
    - echo "Code Coverage of the code..."
    - coverage run -m pytest src/tests/
    - coverage report --include=src/*
    - echo "Code Coverage finished."
    
eploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Building and launching agent Docker image..."
    - docker run -v /var/run/docker.sock:/var/run/docker.sock -p 8080:80 -d agent_image:tag
    - echo "Docker agent image built and container launched."
